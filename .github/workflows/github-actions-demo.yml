name: 'pr-validations'

on:
  pull_request:
    types: [opened, labeled, unlabeled, synchronize, edited, reopened]

permissions: read-all

jobs:
  pr-validations:
      name: 'PR Validation Checks'
      runs-on: ubuntu-latest
      steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Ensure label is present for PR
        env:
          PR_NUMBER: ${{ github.event.number }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh pr view $PR_NUMBER --json labels --jq '.labels[0].name' > pr_label.txt

          IFS=$'\r\n' GLOBIGNORE='*' command eval  'pr_labels=($(cat pr_label.txt))'
          echo $pr_labels
          
          # Define an array of valid lables
          validlables=("Feature Introduced" "Fix" "Security Enhancement" "Deprecated")

          validlablestring=""

          # Loop through each element of the array and concatenate it to the result variable
          for k in "${validlables[@]}"
          do
            validlablestring="$validlablestring  '$k'"
          done

          # Print the result variable
          echo $result
          
          match_found=0

          # Loop through each element of the Validlables array
          for i in "${validlabels[@]}"
          do
            # Loop through each element of the pr lables array
            for j in "${pr_labels[@]}"
            do
              # Compare the current element of the first array with the current element of the second array
              if [ "$i" = "$j" ]
              then
                # A match is found, so set the match_found variable to 1 and break out of the inner loop
                match_found=1
                echo "Found $i in the array."
                break
              fi
            done
            
            # If a match is found, break out of the outer loop as well
            if [ $match_found -eq 1 ]
            then
              break
            fi
          done

          # If no match is found, echo a message
          if [ $match_found -eq 0 ]
          then
            echo "Please provide the valid label for your Pull Request. Possible values are $validlablestring"
            exit 1
          else
            echo "Label applied correctly."            
          fi
